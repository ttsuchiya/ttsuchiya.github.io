{"version":3,"sources":["features/file-handler/fileHandlerSlice.js","features/renderer/rendererSlice.js","features/parameters/parametersSlice.js","features/renderer/rendererAPI.js","features/file-handler/fileHandlerAPI.js","features/file-handler/FileHandler.js","features/analyzer/analyzerSlice.js","features/analyzer/analyzerAPI.js","features/analyzer/Analyzer.js","features/parameters/Parameters.js","features/renderer/Renderer.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["fileHandlerSlice","createSlice","name","initialState","files","metaData","readyToAnalyze","metaDataReady","reducers","addFile","state","payload","push","addMetaData","file","data","clearFiles","setReadyToAnalyze","actions","selectFiles","fileHandler","selectMetaData","selectReadyToAnalyze","audioData","setAudioData","buffer","getAudioData","clearFilesAndAudioData","createAsyncThunk","_","dispatch","Object","keys","forEach","key","rendererSlice","contextReady","readyToRender","playing","fullMix","setContextReady","setReadyToRender","setPlaying","setFullMix","selectReadyToRender","renderer","selectPlaying","selectFullMix","parametersSlice","loudness","filterFreq","tempo","averageTempo","useAverageTempo","setLoudness","setFilterFreq","setTempo","setAverageTempo","setUseAverageTempo","selectLoudness","parameters","selectFilterFreq","selectTempo","selectUseAverageTempo","audioContext","window","AudioContext","webkitAudioContext","Kali","scheduledSourceNodes","resumeAudioContext","a","getState","Promise","resolve","resume","decodeAudioFile","arrayBuffer","then","ab","decodeAudioData","timeStretch","factor","channels","numberOfChannels","block","frames","length","outFrames","Math","floor","outBuffer","createBuffer","sampleRate","c","kali","setup","inOffset","outOffset","flushed","inputData","getChannelData","processed","Float32Array","output","subarray","min","input","process","flush","set","preparePlaylist","dbFS","tracks","slice","i","j","random","temp","randomizeTracks","tgtBPM","tgtLinearAmp","pow","offset","flatMap","track","gainFactor","rms","stretchFactor","result","first","last","stretchedBuffer","duration","gain","segDuration","srcSamplesNeeded","ceil","headBuffer","tailBuffer","end","srcChannelData","headChannelData","tailChannelData","stretchedHeadBuffer","stretchedTailBuffer","partialTimeStretch","head","tail","schedulePlayback","context","now","cof","rise","decay","source","createBufferSource","filter","createBiquadFilter","amp","createGain","type","frequency","value","setValueAtTime","setTargetAtTime","Number","EPSILON","connect","destination","start","playTrackSequence","playlist","map","fade","currentTime","onended","stopPlayback","node","stop","renderTrackSequence","totalDurationInSamps","reduce","b","offlineContext","OfflineAudioContext","startRendering","wav","url","URL","createObjectURL","document","createElement","body","appendChild","style","href","download","click","revokeObjectURL","removeChild","leftPCM","rightPCM","dataview","samples","ArrayBuffer","view","DataView","writeString","setUint32","setUint16","s","max","setInt16","floatTo16BitPCM","encodeWav","inputL","inputR","index","inputIndex","interleave","Blob","bufferToWav","string","setUint8","charCodeAt","processFiles","reject","fileName","split","pop","filesArray","Array","isArray","from","all","FileLoader","useDispatch","fileInputRef","useRef","event","target","preventDefault","dataTransfer","items","item","getAsFile","useState","borderHighlight","setBorderHighlight","className","onDrop","onDragOver","onClick","current","stopPropagation","onMouseEnter","onMouseLeave","id","multiple","accept","onInput","ref","e","htmlFor","analyzerSlice","partialScan","setPartialScan","selectPartialScan","analyzer","peak","calcAverageTempo","round","callAnalyzer","Module","resPtr","_malloc","BYTES_PER_ELEMENT","HEAP32","fill","audioBuffer","ptr","byteLength","ccall","_free","leftData","rightData","leftPtr","rightPtr","assign","Analyzer","useSelector","disabled","defaultChecked","onChange","checked","Parameters","onLoudnessChange","parseInt","isNaN","onFilterFreqChange","onTempoChange","useEffect","parameterRow","parameterLabel","parameterSlider","numberBox","FullPreviewSelector","onMixTypeChange","Player","isPlaying","App","store","configureStore","reducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98a580a3.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nexport const fileHandlerSlice = createSlice({\n  name: 'fileHandler',\n  initialState: {\n    files: [],\n    metaData: {},\n    readyToAnalyze: false,\n    metaDataReady: false\n  },\n  reducers: {\n    addFile(state, { payload }) {\n      state.files.push(payload);\n    },\n    addMetaData(state, { payload }) {\n      const file = payload.file;\n      const data = payload.data;\n      state.metaData[file] = data;\n    },\n    clearFiles(state) {\n      state.files = [];\n      state.metaData = {};\n      state.readyToAnalyze = false;\n    },\n    setReadyToAnalyze(state, { payload }) {\n      state.readyToAnalyze = payload;\n    }\n  } \n});\n\nexport const {\n  addFile,\n  addMetaData,\n  setReadyToAnalyze\n} = fileHandlerSlice.actions;\n\n// Private\nconst { clearFiles } = fileHandlerSlice.actions;\n\nexport const selectFiles = (state) => state.fileHandler.files;\nexport const selectMetaData = (state) => state.fileHandler.metaData;\nexport const selectReadyToAnalyze = (state) => state.fileHandler.readyToAnalyze;\n\n// A mutable data store -- [fileName]: AudioBuffer\nconst audioData = {};\n\nexport function setAudioData(name, buffer) {\n  audioData[name] = buffer;\n}\n\nexport function getAudioData(name) {\n  return audioData[name];\n}\n\nfunction clearAudioData() {\n  Object.keys(audioData).forEach(key => {\n    delete audioData[key];\n  });\n}\n\nexport const clearFilesAndAudioData = createAsyncThunk(\n  'fileHandler',\n  (_, { dispatch }) => {\n    dispatch(clearFiles());\n    clearAudioData();\n  }\n);\n\nexport default fileHandlerSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const rendererSlice = createSlice({\n  name: 'renderer',\n  initialState: {\n    contextReady: false,\n    readyToRender: false,\n    playing: false,\n    fullMix: false\n  },\n  reducers: {\n    setContextReady(state, { payload }) {\n      state.contextReady = payload;\n    },\n    setReadyToRender(state, { payload }) {\n      state.readyToRender = payload;\n    },\n    setPlaying(state, { payload }) {\n      state.playing = payload;\n    },\n    setFullMix(state, { payload }) {\n      state.fullMix = payload;\n    }\n  }\n});\n\nexport const {\n  setContextReady,\n  setReadyToRender,\n  setPlaying,\n  setFullMix\n} = rendererSlice.actions;\n\nexport const selectContextReady = (state) => state.renderer.contextReady;\nexport const selectReadyToRender = (state) => state.renderer.readyToRender;\nexport const selectPlaying = (state) => state.renderer.playing;\nexport const selectFullMix = (state) => state.renderer.fullMix;\n\nexport default rendererSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const parametersSlice = createSlice({\n  name: 'parameters',\n  initialState: {\n    loudness: -12,\n    filterFreq: 0,\n    tempo: 120,\n    averageTempo: 120,\n    useAverageTempo: true\n  },\n  reducers: {\n    setLoudness(state, { payload }) {\n      state.loudness = payload;\n    },\n    setFilterFreq(state, { payload }) {\n      state.filterFreq = payload;\n    },\n    setTempo(state, { payload }) {\n      state.tempo = payload;\n    },\n    setAverageTempo(state, { payload }) {\n      state.averageTempo = payload;\n    },\n    setUseAverageTempo(state, { payload }) {\n      state.useAverageTempo = payload;\n    }\n  }\n});\n\nexport const {\n  setLoudness,\n  setFilterFreq,\n  setTempo,\n  setAverageTempo,\n  setUseAverageTempo\n} = parametersSlice.actions;\n\nexport const selectLoudness = (state) => state.parameters.loudness;\nexport const selectFilterFreq = (state) => state.parameters.filterFreq;\nexport const selectTempo = (state) => state.parameters.tempo;\nexport const selectAverageTempo = (state) => state.parameters.averageTempo;\nexport const selectUseAverageTempo = (state) => state.parameters.useAverageTempo;\n\nexport default parametersSlice.reducer;","import { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n  setContextReady,\n  setPlaying,\n  selectContextReady,\n  selectFullMix,\n  setReadyToRender\n} from \"./rendererSlice\";\n\nimport {\n  selectFiles,\n  selectMetaData,\n  getAudioData\n} from \"../file-handler/fileHandlerSlice\";\n\nimport {\n  selectLoudness,\n  selectFilterFreq,\n  selectTempo\n} from \"../parameters/parametersSlice\";\n\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\nconst Kali = window.Kali;\n\nconst gainAttenuation = 0.75;\nconst fullMixFade = 10;\nconst previewMixFade = 5;\nconst previewMixDuration = 10;\n\nlet scheduledSourceNodes = [];\n\nexport const resumeAudioContext = createAsyncThunk(\n  'renderer/resumeAudioContext',\n  async (payload, { dispatch, getState }) => {\n    if (selectContextReady(getState())) {\n      return Promise.resolve();\n    } else {\n      await audioContext.resume();\n      dispatch(setContextReady(payload));  \n    }\n  }\n);\n\nexport function decodeAudioFile(file) {\n  return file.arrayBuffer()\n    .then(ab => audioContext.decodeAudioData(ab));\n}\n\nfunction timeStretch(buffer, factor) {\n  const channels = buffer.numberOfChannels;\n  const block = 4096 * channels;\n  const frames = buffer.length;\n  const outFrames = Math.floor(frames/factor + 1);\n  const outBuffer = audioContext.createBuffer(channels, outFrames, audioContext.sampleRate);\n\n  // Process each channel separately. Multichannel processing in Kali requires interleaved samples, but AudioBuffers are not.\n  for (let c = 0; c < channels; c++) {\n    const kali = new Kali(1);\n    kali.setup(audioContext.sampleRate, factor, false);\n    let inOffset = 0, outOffset = 0;\n    let flushed = false;\n\n    const inputData = buffer.getChannelData(c);\n    const processed = new Float32Array(outFrames);\n  \n    while (outOffset < processed.length) {\n      outOffset += kali.output(processed.subarray(outOffset, Math.min(outOffset+block,processed.length)));\n  \n      if (inOffset < frames) {\n        let data = inputData.subarray(inOffset, Math.min(inOffset+block, frames));\n        inOffset += data.length;\n        kali.input(data);\n        kali.process();\n      } else if (!flushed) {\n        kali.flush();\n        flushed = true;\n      }\n    }\n\n    outBuffer.getChannelData(c).set(processed);\n  }\n\n  return outBuffer;\n}\n\nfunction partialTimeStretch(buffer, factor, segDuration=previewMixDuration) {\n  const sampleRate = buffer.sampleRate;\n  const channels = buffer.numberOfChannels;\n  const srcSamplesNeeded = Math.ceil(buffer.sampleRate * segDuration * factor);\n\n  const headBuffer = audioContext.createBuffer(channels, srcSamplesNeeded, sampleRate);\n  const tailBuffer = audioContext.createBuffer(channels, srcSamplesNeeded, sampleRate);\n  const end = buffer.length;\n\n  for (let i = 0; i < channels; i++) {\n    const srcChannelData = buffer.getChannelData(i);\n    const headChannelData = headBuffer.getChannelData(i);\n    const tailChannelData = tailBuffer.getChannelData(i);\n\n    for (let j = 0; j < srcSamplesNeeded; j++) {\n      headChannelData[j] = srcChannelData[j];\n      tailChannelData[j] = srcChannelData[end-srcSamplesNeeded+j];\n    }\n  }\n\n  const stretchedHeadBuffer = timeStretch(headBuffer, factor);\n  const stretchedTailBuffer = timeStretch(tailBuffer, factor);\n\n  return [stretchedHeadBuffer, stretchedTailBuffer];\n}\n\nfunction dbfsToAmp(dbFS) {\n  return (dbFS === -96) ? 0 : Math.pow(10, dbFS/20);\n}\n\nfunction randomizeTracks(files) {\n  let tracks = files.slice();\n  for (let i = tracks.length-1; i > 0; i--) {\n    const j = Math.floor(Math.random()*i);\n    const temp = tracks[i];\n    tracks[i] = tracks[j];\n    tracks[j] = temp;\n  }\n  return tracks;\n}\n\nfunction preparePlaylist(state, fullMix) {\n  const files = selectFiles(state);\n  const tracks = randomizeTracks(files);\n  const loudness = selectLoudness(state);\n  const tgtBPM = selectTempo(state);\n  const tgtLinearAmp = dbfsToAmp(loudness);\n  let offset = 0;\n\n  return tracks.flatMap((track, i) => {\n    const metaData = selectMetaData(state)[track];\n    const gainFactor = tgtLinearAmp / metaData.rms;\n    const stretchFactor = tgtBPM / metaData.tempo;\n\n    const buffer = getAudioData(track);\n    const result = [];\n\n    // The first and last tracks won't need crossfading\n    const first = i === 0;\n    const last = i === tracks.length-1;\n          \n    if (fullMix) {\n      const stretchedBuffer = timeStretch(buffer, stretchFactor);\n      const duration = stretchedBuffer.duration;\n  \n      result.push({\n        name: track,\n        buffer: stretchedBuffer,\n        gain: gainFactor,\n        offset, first, last\n      });\n  \n      offset += duration-fullMixFade;\n    } else {\n      const [head, tail] = partialTimeStretch(buffer, stretchFactor);\n\n      result.push({\n        name: `${track} (head)`,\n        buffer: head,\n        gain: gainFactor,\n        offset, \n        first,\n        last: false // Head clips cannot be last\n      }, {\n        name: `${track} (tail)`,\n        buffer: tail,\n        gain: gainFactor,\n        offset: offset+5,\n        first: false, // Tail clips cannot be first\n        last\n      });\n\n      offset += previewMixDuration;\n    }\n\n    return result;\n  });\n}\n\nfunction schedulePlayback(context, buffer, now, offset, gain, cof, rise, decay) {\n  const source = context.createBufferSource();\n  const filter = context.createBiquadFilter();\n  const amp = context.createGain();\n\n  source.buffer = buffer;\n  filter.type = 'highpass';\n  filter.frequency.value = cof;\n\n  gain *= gainAttenuation;\n\n  const duration = buffer.duration;\n  amp.gain.setValueAtTime(rise ? 0 : gain, now+offset);\n  rise && amp.gain.setTargetAtTime(gain, now+offset, rise);\n  decay && amp.gain.setTargetAtTime(0+Number.EPSILON, now+offset+duration-decay, decay);\n\n  source.connect(filter);\n  filter.connect(amp);\n  amp.connect(context.destination);\n  source.start(now+offset);\n\n  return source;\n}\n\nexport const playTrackSequence = createAsyncThunk(\n  'renderer/playTrackSequence',\n  (_, { dispatch, getState }) => {\n    const state = getState();\n    const filterFreq = selectFilterFreq(state);\n    const fullMix = selectFullMix(state);\n    const playlist = preparePlaylist(state, fullMix);\n\n    scheduledSourceNodes = playlist.map(data => {\n      const fade = fullMix ? fullMixFade : previewMixFade;\n      const now = audioContext.currentTime;\n  \n      return schedulePlayback(\n        audioContext,\n        data.buffer,\n        now, data.offset,\n        data.gain,\n        filterFreq,\n        !data.first * fade,\n        !data.last * fade\n      );\n    });\n\n    const lastNode = scheduledSourceNodes[scheduledSourceNodes.length-1];\n    lastNode.onended = function () {\n      dispatch(setPlaying(false));\n    };\n\n    dispatch(setPlaying(true));\n  }\n);\n\nexport const stopPlayback = createAsyncThunk(\n  'renderer/stopPlayback',\n  (_, { dispatch }) => {\n    scheduledSourceNodes.forEach(node => node.stop());\n    scheduledSourceNodes = [];\n    dispatch(setPlaying(false));\n  }\n);\n\nexport const renderTrackSequence = createAsyncThunk(\n  'renderer/renderTrackSequence',\n  (_, { getState }) => {\n    const state = getState();\n    const filterFreq = selectFilterFreq(state);\n    const fullMix = selectFullMix(state);\n    const playlist = preparePlaylist(state, fullMix);\n\n    const totalDurationInSamps = playlist.reduce((a,b) => {\n      const { buffer, last } = b;\n      // Note: A risky assumption that file sampling rates are always 44.1k Hz...\n      return a + buffer.length - (last ? 0 : 44100 * (fullMix ? fullMixFade : previewMixFade));\n    }, 0);\n\n    // Note: Assumes stereo 44.1k Hz for all tracks...\n    const offlineContext = new OfflineAudioContext(2, totalDurationInSamps, 44100);\n\n    playlist.forEach(data => {\n      const fade = fullMix ? fullMixFade : previewMixFade;\n      const now = offlineContext.currentTime;\n  \n      schedulePlayback(\n        offlineContext,\n        data.buffer,\n        now, data.offset,\n        data.gain,\n        filterFreq,\n        !data.first * fade,\n        !data.last * fade\n      );\n    });\n    \n    offlineContext.startRendering().then(buffer => {\n      const wav = bufferToWav(buffer);\n      download(wav);\n    });\n  }\n);\n\nfunction download(wav) {\n  const url = URL.createObjectURL(wav);\n  const a = document.createElement('a');\n  document.body.appendChild(a);\n  a.style = 'display:none';\n  a.href = url;\n  a.download = 'djmix.wav';\n  a.click();\n  URL.revokeObjectURL(url);\n  document.body.removeChild(a);\n}\n\nfunction bufferToWav(buffer) {\n  let leftPCM, rightPCM;\n\n  if (buffer.numberOfChannels === 2) {\n    leftPCM = buffer.getChannelData(0);\n    rightPCM = buffer.getChannelData(1);\n  } else {\n    leftPCM = buffer.getChannelData(0);\n    rightPCM = buffer.getChannelData(0);\n  }\n\n  const interleaved = interleave(leftPCM, rightPCM);\n  const dataview = encodeWav(interleaved, buffer.sampleRate);\n  return new Blob([dataview], { type: 'audio/wav' });\n}\n\nfunction interleave(inputL, inputR) {\n  const length = inputL.length + inputR.length;\n  const result = new Float32Array(length);\n\n  let index = 0, inputIndex = 0;\n\n  while (index < length) {\n    result[index++] = inputL[inputIndex];\n    result[index++] = inputR[inputIndex];\n    inputIndex++;\n  }\n  return result;\n}\n\nfunction encodeWav(samples, sampleRate) {\n  const buffer = new ArrayBuffer(44 + samples.length * 2);\n  const view = new DataView(buffer);\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF');\n  /* file length */\n  view.setUint32(4, 32 + samples.length * 2, true);\n  /* RIFF type */\n  writeString(view, 8, 'WAVE');\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ');\n  /* format chunk length */\n  view.setUint32(16, 16, true);\n  /* sample format (raw) */\n  view.setUint16(20, 1, true);\n  /* channel count */\n  view.setUint16(22, 2, true);\n  /* sample rate */\n  view.setUint32(24, sampleRate, true);\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * 4, true);\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, 4, true);\n  /* bits per sample */\n  view.setUint16(34, 16, true);\n  /* data chunk identifier */\n  writeString(view, 36, 'data');\n  /* data chunk length */\n  view.setUint32(40, samples.length * 2, true);\n\n  floatTo16BitPCM(view, 44, samples);\n\n  return view;\n}\n\nfunction floatTo16BitPCM(output, offset, input) {\n  for (let i = 0; i < input.length; i++, offset += 2) {\n    const s = Math.max(-1, Math.min(1, input[i]));\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n  }\n}\n\nfunction writeString(view, offset, string) {\n  for (let i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n  addFile,\n  setAudioData\n} from \"./fileHandlerSlice\";\n\nimport { decodeAudioFile } from \"../renderer/rendererAPI\";\n\nfunction parseFileType(fileName) {\n  return fileName.split('.').pop();\n}\n\nexport const processFiles = createAsyncThunk(\n  'fileHandler/processFiles',\n  async (files, { dispatch }) => {\n    if (!files && files.length === 0) {\n      return Promise.reject();\n    } else if (files.length === 1) {\n      const file = files[0];\n      const fileType = parseFileType(file.name);\n      if (fileType === 'zip') {\n\n      } else {\n        return decodeAudioFile(file).then(buffer => {\n          dispatch(addFile(file.name));\n          setAudioData(file.name, buffer);\n        });\n      }\n    } else {\n      const filesArray = Array.isArray(files) ? files : Array.from(files);\n      return Promise.all(filesArray.map(file => {\n        // const fileType = parseFileType(file.name);\n\n        return decodeAudioFile(file).then(buffer => {\n          dispatch(addFile(file.name));\n          setAudioData(file.name, buffer);\n        });\n      }))\n    }\n  }\n);","import { useDispatch } from \"react-redux\";\nimport { useRef, useState } from \"react\";\n\nimport {\n  setReadyToAnalyze,\n  clearFilesAndAudioData\n} from \"./fileHandlerSlice\";\n\nimport { processFiles } from \"./fileHandlerAPI\";\n\nimport { setReadyToRender } from \"../renderer/rendererSlice\";\nimport { resumeAudioContext } from \"../renderer/rendererAPI\";\n\nexport function FileLoader() {\n  const dispatch = useDispatch();\n  const fileInputRef = useRef();\n  \n  async function onFileInput(event) {\n    dispatch(clearFilesAndAudioData());\n    dispatch(setReadyToRender(false));\n    await dispatch(resumeAudioContext(true));\n    await dispatch(processFiles(event.target?.files));\n    dispatch(setReadyToAnalyze(true));\n  }\n\n  async function onFileDrop(event) {\n    event.preventDefault();\n\n    dispatch(clearFilesAndAudioData());\n    dispatch(setReadyToRender(false));\n    await dispatch(resumeAudioContext(true));\n    await dispatch(resumeAudioContext(true));\n\n    const files = [];\n    for (let i = 0; i < event.dataTransfer.items.length; i++) {\n      const item = event.dataTransfer.items[i];\n      files.push(item.getAsFile());\n    }\n\n    await dispatch(processFiles(files));\n    dispatch(setReadyToAnalyze(true));\n  }\n\n  function invokeFileUpload(event) {\n    fileInputRef.current.click();\n    event.stopPropagation();\n  }\n\n  const [borderHighlight, setBorderHighlight] = useState(false);\n\n  return (\n    <div \n      className={`\n        w-full py-8\n        border-4 border-solid\n        ${borderHighlight ? 'border-gray-400' : 'border-gray-200'}\n        flex flex-col justify-center items-center\n      `}\n      onDrop={onFileDrop} \n      onDragOver={event => event.preventDefault()}\n      onClick={invokeFileUpload}\n      onMouseEnter={() => setBorderHighlight(true)}\n      onMouseLeave={() => setBorderHighlight(false)}\n    >\n      <input \n        type=\"file\" \n        id=\"file-loader\" name=\"file-loader\" \n        multiple accept=\"audio/*\" \n        onInput={onFileInput} \n        className=\"hidden\"\n        ref={fileInputRef}\n        onClick={e => e.stopPropagation()}\n      />\n      <label \n        htmlFor=\"file-loader\"\n        onClick={e => e.stopPropagation()}\n      >\n        Drag and drop or click here to upload audio files.\n      </label>\n    </div>\n  );\n}","import { createSlice } from '@reduxjs/toolkit';\n\nexport const analyzerSlice = createSlice({\n  name: 'analyzer',\n  initialState: {\n    partialScan: true\n  },\n  reducers: {\n    setPartialScan(state, { payload }) {\n      state.partialScan = payload;\n    }\n  }\n});\n\nexport const { setPartialScan } = analyzerSlice.actions;\n\nexport const selectPartialScan = (state) => state.analyzer.partialScan;\n\nexport default analyzerSlice.reducer;","import { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { selectPartialScan } from \"./analyzerSlice\";\n\nimport {\n  setReadyToAnalyze,\n  selectFiles,\n  addMetaData,\n  selectMetaData,\n  getAudioData\n} from \"../file-handler/fileHandlerSlice\";\n\nimport { setReadyToRender } from \"../renderer/rendererSlice\";\n\nimport {\n  setTempo,\n  setAverageTempo\n} from \"../parameters/parametersSlice\";\n\nconst partialScanStart = 15;\nconst partialScanEnd = 45;\n\nwindow.result = {\n  peak: null,\n  rms: null,\n  tempo: null\n};\n\nexport const calcAverageTempo = createAsyncThunk(\n  'analyzer/calcAverageTempo',\n  (_, { dispatch, getState }) => {\n    const files = selectFiles(getState());\n\n    if (!files.length) {\n      dispatch(setTempo(120));\n      dispatch(setAverageTempo(120));\n    } else {\n      const metaData = selectMetaData(getState());\n\n      const tempo = Math.round(files.reduce((a,b) => a + metaData[b].tempo, 0) / files.length);\n  \n      dispatch(setTempo(tempo));\n      dispatch(setAverageTempo(tempo));\n    }\n  }\n);\n\nexport const callAnalyzer = createAsyncThunk(\n  'analyzer/callAnalyzer',\n  (_, { dispatch, getState }) => {\n    const files = selectFiles(getState());\n    const partialScan = selectPartialScan(getState());\n\n    dispatch(setReadyToAnalyze(false));\n    dispatch(setReadyToRender(false));\n\n    files.forEach((file, i) => {\n      const Module = window.Module;\n\n      const numResult = 4;\n      const resPtr = Module._malloc(numResult * Float32Array.BYTES_PER_ELEMENT);\n      const resView = new Float32Array(Module.HEAP32.buffer, resPtr, numResult);\n      resView.fill(0);\n\n      let audioBuffer = getAudioData(file);\n\n      if (audioBuffer.numberOfChannels === 1) {\n        let data = audioBuffer.getChannelData(0);\n        if (partialScan) data = data.slice(44100*5,44100*45);\n  \n        const ptr = Module._malloc(data.byteLength);\n        const view = new Float32Array(Module.HEAP32.buffer, ptr, data.length);\n        view.set(data);\n  \n        Module.ccall(\n          'analyzeMono',\n          null,\n          ['number', 'number', 'number', 'number'],\n          [ptr, data.length, resPtr, numResult]\n        );\n  \n        Module._free(ptr);\n      } else {\n        let leftData = audioBuffer.getChannelData(0);\n        let rightData = audioBuffer.getChannelData(1);\n\n        if (partialScan) {\n          leftData = leftData.slice(44100*partialScanStart, 44100*partialScanEnd);\n          rightData = rightData.slice(44100*partialScanStart, 44100*partialScanEnd);\n        }\n\n        const leftPtr = Module._malloc(leftData.byteLength);\n        const leftView = new Float32Array(Module.HEAP32.buffer, leftPtr, leftData.length);\n        leftView.set(leftData);\n\n        const rightPtr = Module._malloc(rightData.byteLength);\n        const rightView = new Float32Array(Module.HEAP32.buffer, rightPtr, rightData.length);\n        rightView.set(rightData);\n\n        Module.ccall(\n          'analyzeStereo',\n          null,\n          ['number', 'number', 'number', 'number', 'number'],\n          [leftPtr, rightPtr, leftData.length, resPtr, numResult]\n        );\n  \n        Module._free(leftPtr);\n        Module._free(rightPtr);\n      }  \n  \n      dispatch(addMetaData({\n        file: file,\n        data: Object.assign({}, window.result)\n      }));\n\n      Module._free(resPtr);\n    });\n\n    dispatch(calcAverageTempo());\n    dispatch(setReadyToAnalyze(true));\n    dispatch(setReadyToRender(true));\n  }\n);","import { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  setPartialScan,\n  selectPartialScan\n} from \"./analyzerSlice\";\n\nimport { selectReadyToAnalyze } from \"../file-handler/fileHandlerSlice\";\nimport { callAnalyzer } from \"./analyzerAPI\";\n\nexport function Analyzer() {\n  const dispatch = useDispatch();\n  const readyToAnalyze = useSelector(selectReadyToAnalyze);\n  const partialScan = useSelector(selectPartialScan);\n\n  function onPartialScanChange(event) {\n    dispatch(setPartialScan(event.target.checked));\n  }\n\n  return (\n    <div className={`\n      flex items-center justify-evenly\n      border-4 border-solid \n      ${readyToAnalyze ? 'border-gray-400' : 'border-gray-200'}\n      w-full py-2\n    `}>\n      <button disabled={!readyToAnalyze} onClick={() => dispatch(callAnalyzer())}>Analyze</button>\n      <div>\n        <input type=\"checkbox\" id=\"partial-scan\" defaultChecked={partialScan} onChange={onPartialScanChange} />\n        <label htmlFor=\"partial-scan\">Partial Scan</label>\n      </div>\n    </div>\n  );\n}","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport {\n  setLoudness,\n  setFilterFreq,\n  setTempo,\n  setUseAverageTempo,\n  selectLoudness,\n  selectFilterFreq,\n  selectTempo,\n  selectUseAverageTempo,\n} from './parametersSlice';\n\nimport { selectReadyToRender } from \"../renderer/rendererSlice\";\n\nimport { calcAverageTempo } from \"../analyzer/analyzerAPI\";\n\nexport function Parameters() {\n  const dispatch = useDispatch();\n\n  const loudness = useSelector(selectLoudness);\n  const filterFreq = useSelector(selectFilterFreq);\n  const tempo = useSelector(selectTempo);\n  const useAverageTempo = useSelector(selectUseAverageTempo);\n  const readyToRender = useSelector(selectReadyToRender);\n\n  const minLoudness = -96;\n  const maxLoudness = 0;\n  const minFilterFreq = 0;\n  const maxFilterFreq = 3000;\n  const minTempo = 40;\n  const maxTempo = 180;\n\n  useEffect(() => {}, [loudness, filterFreq, tempo]);\n\n  function onLoudnessChange(event) {\n    let value = parseInt(event.target.value);\n    if (isNaN(value) || value > maxLoudness || value < minLoudness) {\n      return;\n    } else {\n      dispatch(setLoudness(value));\n    }\n  }\n\n  function onFilterFreqChange(event) {\n    let value = parseInt(event.target.value);\n    if (isNaN(value) || value > maxFilterFreq || value < minFilterFreq) return;\n    dispatch(setFilterFreq(value));\n  }\n\n  function onUseAvgTempoChange(event) {\n    dispatch(setUseAverageTempo(event.target.checked));\n    if (event.target.checked) {\n      dispatch(calcAverageTempo());\n    }\n  }\n\n  function onTempoChange(event) {\n    let value = parseInt(event.target.value);\n    if (isNaN(value)) return;\n    if (value < minTempo) value = minTempo;\n    if (value > maxTempo) value = maxTempo;\n    dispatch(setTempo(value));\n  }\n\n  const parameterRow = `\n    w-full py-1 space-x-4 px-4\n    flex justify-between items-center  \n  `;\n  const parameterLabel = \"w-1/5 pl-4\";\n  const parameterSlider = \"w-1/3\";\n  const numberBox = \"w-1/3 space-x-2\";\n\n  return (\n    <div className={`\n      border-4 border-solid\n      ${readyToRender ? 'border-gray-400' : 'border-gray-200' }\n      w-full py-2 space-y-2\n      flex flex-col items-center justify-center\n    `}>\n      <div className={parameterRow}>\n        <label className={parameterLabel} htmlFor=\"dbfs\">\n          Loudness:\n        </label>\n        <input className={parameterSlider} type=\"range\" min={minLoudness} max={maxLoudness} value={loudness} onChange={onLoudnessChange} />\n        <div className={numberBox}>\n          <input type=\"number\" id=\"dbfs\" name=\"dbfs\" value={loudness} onChange={onLoudnessChange} />\n          <span>dBFS</span>\n        </div>\n      </div>\n      <div className={parameterRow}>\n        <label className={parameterLabel} htmlFor=\"freq\">\n          HPF Freq:\n        </label>\n        <input className={parameterSlider} type=\"range\" min={minFilterFreq} max={maxFilterFreq} value={filterFreq} onChange={onFilterFreqChange} />\n        <div className={numberBox}>\n          <input type=\"number\" id=\"freq\" name=\"freq\" value={filterFreq} onChange={onFilterFreqChange} />\n          <span>Hz</span>\n        </div>\n      </div>\n      <div className={parameterRow}>\n        <label className={parameterLabel} htmlFor=\"bpm\">\n          Tempo:\n        </label>\n        <input className={parameterSlider} type=\"range\" min={minTempo} max={maxTempo} value={tempo} disabled={useAverageTempo} onChange={onTempoChange} />\n        <div className={numberBox}>\n          <input type=\"number\" id=\"bpm\" name=\"bpm\" value={tempo} onChange={onTempoChange} disabled={useAverageTempo} />\n          <span>BPM</span>\n        </div>\n      </div>\n      <div className={`pb-1`}>\n        <input type=\"checkbox\" id=\"use-avg-tempo\" name=\"use-avg-tempo\" defaultChecked={useAverageTempo} onChange={onUseAvgTempoChange} />\n        <label htmlFor=\"use-avg-tempo\">Use the average tempo of the tracks</label>\n      </div>\n    </div>\n  );\n}","import { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setFullMix,\n  selectReadyToRender,\n  selectPlaying,\n  selectFullMix\n} from \"./rendererSlice\";\n\nimport {\n  playTrackSequence,\n  stopPlayback,\n  renderTrackSequence\n} from \"./rendererAPI\";\n\nfunction FullPreviewSelector() {\n  const dispatch = useDispatch();\n  const fullMix = useSelector(selectFullMix);\n\n  function onMixTypeChange(event) {\n    dispatch(setFullMix(event.target.value === 'full'));\n  }\n\n  return (\n    <div className={`\n      w-2/5\n    `}>\n      <div>\n        <input type=\"radio\" id=\"full\" name=\"mix\" value=\"full\" defaultChecked={fullMix} onChange={onMixTypeChange} />\n        <label htmlFor=\"full\">Full Mix</label>\n      </div>\n      <div>\n        <input type=\"radio\" id=\"preview\" name=\"mix\" value=\"preview\" defaultChecked={!fullMix} onChange={onMixTypeChange} />\n        <label htmlFor=\"preview\">Preview Mix</label>\n      </div>\n    </div>\n  );\n}\n\nexport function Player() {\n  const dispatch = useDispatch();\n\n  const readyToRender = useSelector(selectReadyToRender);\n  const isPlaying = useSelector(selectPlaying);\n\n  function onClickPlay() {\n    dispatch(playTrackSequence());\n  }\n\n  function onClickStop() {\n    dispatch(stopPlayback());\n  }\n\n  function onClickDownload() {\n    dispatch(renderTrackSequence());\n  }\n\n  return (\n    <div className={`\n      w-full py-2\n      border-4 border-solid\n      ${readyToRender ? 'border-gray-400' : 'border-gray-200'} \n      flex items-center justify-around\n    `}>\n      <div className={`\n        w-3/5\n        flex justify-center\n        space-x-2\n      `}>\n        <button disabled={!readyToRender || isPlaying} onClick={onClickPlay}>Play</button>\n        <button disabled={!(readyToRender && isPlaying)} onClick={onClickStop}>Stop</button>\n        <button disabled={!readyToRender} onClick={onClickDownload}>Download</button>\n      </div>\n      <FullPreviewSelector />\n   </div>\n  );\n}","import React from 'react';\nimport './App.css';\nimport { FileLoader } from './features/file-handler/FileHandler';\nimport { Analyzer } from './features/analyzer/Analyzer';\nimport { Parameters } from './features/parameters/Parameters';\nimport { Player } from './features/renderer/Renderer';\n\nfunction App() {\n  return (\n    <div className={`\n      w-96 p-4 space-y-2\n      flex flex-col justify-center items-center\n    `}>\n      <div className={`\n        text-xl p-2\n      `}>\n        MedRhythms DJ Mix\n      </div>\n      <FileLoader />\n      <Analyzer />\n      <Parameters />\n      <Player />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport analyzer from '../features/analyzer/analyzerSlice';\nimport fileHandler from '../features/file-handler/fileHandlerSlice';\nimport parameters from '../features/parameters/parametersSlice';\nimport renderer from '../features/renderer/rendererSlice';\n\nexport const store = configureStore({\n  reducer: {\n    analyzer,\n    fileHandler,\n    parameters,\n    renderer\n  }\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}